{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/modal.service\";\nimport * as i3 from \"@angular/common\";\nfunction AddExpenseComponent_button_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵtext(1, \" ADD \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddExpenseComponent_button_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵtext(1, \" EDIT \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddExpenseComponent {\n  constructor(formBuilder, modalService) {\n    this.formBuilder = formBuilder;\n    this.modalService = modalService;\n    this.expense = undefined;\n    this.onAddExpense = new EventEmitter();\n    this.onEditExpense = new EventEmitter();\n  }\n  ngOnInit() {\n    this.expenseForm = this.formBuilder.group({\n      expenseType: [this.doAdd ? '' : this.expense?.type, Validators.required],\n      category: [this.doAdd ? '' : this.expense?.category, Validators.required],\n      date: [this.doAdd ? '' : this.expense?.date, Validators.required],\n      amount: [this.doAdd ? '' : this.expense?.amount, Validators.required]\n    });\n  }\n  onSubmit() {\n    const value = this.expenseForm.value;\n    if (![value.category, value.expenseType, value.amount].includes('')) {\n      if (doAdd) {\n        const newExpense = {\n          category: value.category,\n          //date:value.date,\n          type: value.expenseType,\n          amount: value.amount\n        };\n        console.log(newExpense);\n        this.onAddExpense.emit(newExpense);\n      } else {\n        const newExpense = {\n          id: this.expense?.id,\n          category: value.category,\n          //date:value.date,\n          type: value.expenseType,\n          amount: value.amount\n        };\n        console.log(newExpense);\n        this.onEditExpense.emit(newExpense);\n      }\n      this.closeModal();\n    }\n    // You can make a service call to post the form data to the backend\n  }\n\n  closeModal() {\n    this.modalService.onCloseModal();\n  }\n}\nAddExpenseComponent.ɵfac = function AddExpenseComponent_Factory(t) {\n  return new (t || AddExpenseComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ModalService));\n};\nAddExpenseComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddExpenseComponent,\n  selectors: [[\"app-add-expense\"]],\n  inputs: {\n    expense: \"expense\",\n    doAdd: \"doAdd\"\n  },\n  outputs: {\n    onAddExpense: \"onAddExpense\",\n    onEditExpense: \"onEditExpense\"\n  },\n  decls: 23,\n  vars: 6,\n  consts: [[3, \"ngClass\"], [\"id\", \"form1\", 3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"expenseType\"], [\"value\", \"\"], [\"value\", \"expense\"], [\"value\", \"income\"], [\"type\", \"text\", \"formControlName\", \"category\", \"placeholder\", \"Category of the Expense/Income\"], [\"type\", \"number\", \"formControlName\", \"amount\", \"placeholder\", \"\\u20B9Enter Amount\"], [\"button\", \"\", \"type\", \"submit\", \"class\", \"buttonFlat\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"buttonFlat\", 3, \"click\"], [\"button\", \"\", \"type\", \"submit\", 1, \"buttonFlat\"]],\n  template: function AddExpenseComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AddExpenseComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"select\", 2)(3, \"option\", 3);\n      i0.ɵɵtext(4, \"Select expense type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"option\", 4);\n      i0.ɵɵtext(6, \"Expense\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"option\", 5);\n      i0.ɵɵtext(8, \"Income\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(9, \"br\")(10, \"br\")(11, \"input\", 6)(12, \"br\")(13, \"br\")(14, \"input\", 7)(15, \"br\")(16, \"br\");\n      i0.ɵɵelementStart(17, \"div\", 0);\n      i0.ɵɵtext(18);\n      i0.ɵɵtemplate(19, AddExpenseComponent_button_19_Template, 2, 0, \"button\", 8);\n      i0.ɵɵtemplate(20, AddExpenseComponent_button_20_Template, 2, 0, \"button\", 8);\n      i0.ɵɵelementStart(21, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function AddExpenseComponent_Template_button_click_21_listener() {\n        return ctx.closeModal();\n      });\n      i0.ɵɵtext(22, \" CANCEL \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", \"add-new\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.expenseForm);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngClass\", \"flex\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\\n\", ctx.doAdd, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.doAdd);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.doAdd);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".add-new[_ngcontent-%COMP%]{\\n    width:25%;\\n    height:35%;\\n    max-width:350px;\\n    min-width:350px;\\n    padding: 35px;\\n    text-align: center;\\n    background: #2196F3;\\n    color:#FFF;\\n    top: 0;\\n    right: 3%;\\n    margin: auto;\\n    margin-top:5%;\\n    margin-left:38%;\\n    position:fixed;\\n    transition:visibility 0s, opacity 0s;\\n  }\\n  .add-new.visible[_ngcontent-%COMP%]{\\n    z-index:2500;\\n    opacity:1;\\n    \\n    transition:visibility 1s, opacity 1s;\\n  }\\n  .flex[_ngcontent-%COMP%]{\\n    display: flex;\\n    justify-content: space-between;\\n    margin: auto\\n  }\\n  .buttonFlat[_ngcontent-%COMP%] {\\n    \\n    font-family: 'Orbitron', sans-serif;\\n    display: block;\\n    height: 36px;\\n    width:70px;\\n    font-size: 12px;\\n    color: #FFF;\\n    line-height: 38px;    \\n    text-align: center;\\n    background-color:rgba(0,0,0,0.1);\\n    letter-spacing: 0.4px;     \\n    \\n    padding-top: 0;\\n    padding-left: 8px;\\n    padding-right: 8px;\\n    padding-bottom: 0;\\n    \\n    margin-top: 6px;\\n    margin-left: 4px;\\n    margin-right: 4px;\\n    margin-bottom: 6px;\\n    cursor: pointer;\\n    border: none;\\n    box-shadow:\\n      0 5px 5px rgba(0,0,0, 0.30);\\n  }\\n  .buttonFlat[_ngcontent-%COMP%]:active {\\n   box-shadow:\\n      0 2px 2px rgba(0,0,0, 0.30);\\n  }\\n  input[type=\\\"text\\\"][_ngcontent-%COMP%], input[type=\\\"date\\\"][_ngcontent-%COMP%], input[type=\\\"number\\\"][_ngcontent-%COMP%]{\\n    font-family: 'Orbitron', sans-serif;\\n    text-align:center;\\n    width:100%;\\n    height:35px;\\n    border: none;\\n    border-bottom:1px solid #FFF;\\n    color:#FFF;\\n    outline: none;\\n    font-size: 15px;\\n    background: #2196F3;\\n  }\\n  [_ngcontent-%COMP%]::-webkit-input-placeholder {\\n     color: rgba(255,255,255, 0.30);\\n  }\\n  select[_ngcontent-%COMP%]{\\n    text-align:center;\\n    font-family: 'Orbitron', sans-serif;\\n    width:100%;\\n    height:35px;\\n    background: none;\\n    border: none;\\n    outline: none;\\n    border-bottom:1px solid #FFF;\\n    color:#FFF;\\n  }\\n  select[_ngcontent-%COMP%]:hover{\\n    color:#000;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZGQtZXhwZW5zZS9hZGQtZXhwZW5zZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksU0FBUztJQUNULFVBQVU7SUFDVixlQUFlO0lBQ2YsZUFBZTtJQUNmLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLFVBQVU7SUFDVixNQUFNO0lBQ04sU0FBUztJQUNULFlBQVk7SUFDWixhQUFhO0lBQ2IsZUFBZTtJQUNmLGNBQWM7SUFDZCxvQ0FBb0M7RUFDdEM7RUFDQTtJQUNFLFlBQVk7SUFDWixTQUFTOztJQUVULG9DQUFvQztFQUN0QztFQUNBO0lBQ0UsYUFBYTtJQUNiLDhCQUE4QjtJQUM5QjtFQUNGO0VBQ0E7SUFDRSxTQUFTO0lBQ1QsbUNBQW1DO0lBQ25DLGNBQWM7SUFDZCxZQUFZO0lBQ1osVUFBVTtJQUNWLGVBQWU7SUFDZixXQUFXO0lBQ1gsaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixnQ0FBZ0M7SUFDaEMscUJBQXFCO0lBQ3JCLHFCQUFxQjtJQUNyQixjQUFjO0lBQ2QsaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIseUNBQXlDO0lBQ3pDLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsWUFBWTtJQUNaO2lDQUM2QjtFQUMvQjtFQUNBO0dBQ0M7aUNBQzhCO0VBQy9CO0VBQ0E7SUFDRSxtQ0FBbUM7SUFDbkMsaUJBQWlCO0lBQ2pCLFVBQVU7SUFDVixXQUFXO0lBQ1gsWUFBWTtJQUNaLDRCQUE0QjtJQUM1QixVQUFVO0lBQ1YsYUFBYTtJQUNiLGVBQWU7SUFDZixtQkFBbUI7RUFDckI7RUFDQTtLQUNHLDhCQUE4QjtFQUNqQztFQUNBO0lBQ0UsaUJBQWlCO0lBQ2pCLG1DQUFtQztJQUNuQyxVQUFVO0lBQ1YsV0FBVztJQUNYLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1osYUFBYTtJQUNiLDRCQUE0QjtJQUM1QixVQUFVO0VBQ1o7RUFDQTtJQUNFLFVBQVU7RUFDWiIsInNvdXJjZXNDb250ZW50IjpbIi5hZGQtbmV3e1xuICAgIHdpZHRoOjI1JTtcbiAgICBoZWlnaHQ6MzUlO1xuICAgIG1heC13aWR0aDozNTBweDtcbiAgICBtaW4td2lkdGg6MzUwcHg7XG4gICAgcGFkZGluZzogMzVweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZDogIzIxOTZGMztcbiAgICBjb2xvcjojRkZGO1xuICAgIHRvcDogMDtcbiAgICByaWdodDogMyU7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIG1hcmdpbi10b3A6NSU7XG4gICAgbWFyZ2luLWxlZnQ6MzglO1xuICAgIHBvc2l0aW9uOmZpeGVkO1xuICAgIHRyYW5zaXRpb246dmlzaWJpbGl0eSAwcywgb3BhY2l0eSAwcztcbiAgfVxuICAuYWRkLW5ldy52aXNpYmxle1xuICAgIHotaW5kZXg6MjUwMDtcbiAgICBvcGFjaXR5OjE7XG4gICAgXG4gICAgdHJhbnNpdGlvbjp2aXNpYmlsaXR5IDFzLCBvcGFjaXR5IDFzO1xuICB9XG4gIC5mbGV4e1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIG1hcmdpbjogYXV0b1xuICB9XG4gIC5idXR0b25GbGF0IHtcbiAgICAvKiBGb3JtICovXG4gICAgZm9udC1mYW1pbHk6ICdPcmJpdHJvbicsIHNhbnMtc2VyaWY7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiAzNnB4O1xuICAgIHdpZHRoOjcwcHg7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGNvbG9yOiAjRkZGO1xuICAgIGxpbmUtaGVpZ2h0OiAzOHB4OyAgICBcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLDAuMSk7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuNHB4OyAgICAgXG4gICAgLyogSW50ZXJuYWwgcGFkZGluZyAqL1xuICAgIHBhZGRpbmctdG9wOiAwO1xuICAgIHBhZGRpbmctbGVmdDogOHB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDhweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgICAvKiBFeHRlcm5hbCBwYWRkaW5nIMOiwoDCkyBUb3VjaCB0YXJnZXQgc2l6ZSAqL1xuICAgIG1hcmdpbi10b3A6IDZweDtcbiAgICBtYXJnaW4tbGVmdDogNHB4O1xuICAgIG1hcmdpbi1yaWdodDogNHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDZweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJveC1zaGFkb3c6XG4gICAgICAwIDVweCA1cHggcmdiYSgwLDAsMCwgMC4zMCk7XG4gIH1cbiAgLmJ1dHRvbkZsYXQ6YWN0aXZlIHtcbiAgIGJveC1zaGFkb3c6XG4gICAgICAwIDJweCAycHggcmdiYSgwLDAsMCwgMC4zMCk7XG4gIH1cbiAgaW5wdXRbdHlwZT1cInRleHRcIl0saW5wdXRbdHlwZT1cImRhdGVcIl0saW5wdXRbdHlwZT1cIm51bWJlclwiXXtcbiAgICBmb250LWZhbWlseTogJ09yYml0cm9uJywgc2Fucy1zZXJpZjtcbiAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICB3aWR0aDoxMDAlO1xuICAgIGhlaWdodDozNXB4O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBib3JkZXItYm90dG9tOjFweCBzb2xpZCAjRkZGO1xuICAgIGNvbG9yOiNGRkY7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgYmFja2dyb3VuZDogIzIxOTZGMztcbiAgfVxuICA6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgICBjb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwgMC4zMCk7XG4gIH1cbiAgc2VsZWN0e1xuICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgIGZvbnQtZmFtaWx5OiAnT3JiaXRyb24nLCBzYW5zLXNlcmlmO1xuICAgIHdpZHRoOjEwMCU7XG4gICAgaGVpZ2h0OjM1cHg7XG4gICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBib3JkZXItYm90dG9tOjFweCBzb2xpZCAjRkZGO1xuICAgIGNvbG9yOiNGRkY7XG4gIH1cbiAgc2VsZWN0OmhvdmVye1xuICAgIGNvbG9yOiMwMDA7XG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","Validators","i0","AddExpenseComponent","constructor","formBuilder","modalService","undefined","ngOnInit","expenseForm","group","expenseType","doAdd","expense","type","required","category","date","amount","onSubmit","value","includes","newExpense","console","log","onAddExpense","emit","id","onEditExpense","closeModal","onCloseModal","selectors","inputs","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/shelly/Downloads/expense-tracker/src/app/components/add-expense/add-expense.component.ts","/home/shelly/Downloads/expense-tracker/src/app/components/add-expense/add-expense.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { Expense } from 'src/app/Expense';\nimport { ModalService } from 'src/app/services/modal.service';\n\n@Component({\n  selector: 'app-add-expense',\n  templateUrl: './add-expense.component.html',\n  styleUrls: ['./add-expense.component.css'],\n})\nexport class AddExpenseComponent {\n  @Input() expense: Expense | undefined = undefined;\n  @Input() doAdd!: boolean;\n  @Output() onAddExpense: EventEmitter<Expense> = new EventEmitter();\n  @Output() onEditExpense: EventEmitter<Expense> = new EventEmitter();\n  expenseForm!: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private modalService: ModalService\n  ) {}\n\n  ngOnInit() {\n    this.expenseForm = this.formBuilder.group({\n      expenseType: [this.doAdd ? '' : this.expense?.type, Validators.required],\n      category: [\n        this.doAdd ? '' : this.expense?.category,\n        Validators.required,\n      ],\n      date: [this.doAdd ? '' : this.expense?.date, Validators.required],\n      amount: [this.doAdd ? '' : this.expense?.amount, Validators.required],\n    });\n  }\n\n  onSubmit() {\n    const value = this.expenseForm.value;\n    if (![value.category, value.expenseType, value.amount].includes('')) {\n      if(doAdd){\n        const newExpense = {\n          category: value.category,\n          //date:value.date,\n          type: value.expenseType,\n          amount: value.amount,\n        };\n        console.log(newExpense);\n        this.onAddExpense.emit(newExpense);\n      }\n      else{\n        const newExpense = {\n          id: this.expense?.id,\n          category: value.category,\n          //date:value.date,\n          type: value.expenseType,\n          amount: value.amount,\n        };\n        console.log(newExpense);\n        this.onEditExpense.emit(newExpense);\n      }\n      this.closeModal();\n      \n    }\n\n    // You can make a service call to post the form data to the backend\n  }\n\n  closeModal(): void {\n    this.modalService.onCloseModal();\n  }\n}\n","<div [ngClass]=\"'add-new'\">\n    <!-- <div class=\"load\">\n      <span class=\"loader\">\n        <span class=\"loader-inner\"></span>\n      </span>\n    </div> -->\n    <form [formGroup]=\"expenseForm\" id=\"form1\" (ngSubmit)=\"onSubmit()\">\n      <select formControlName=\"expenseType\">\n        <option value=\"\">Select expense type</option>\n        <option value=\"expense\">Expense</option>\n        <option value=\"income\">Income</option>\n      </select>\n      <br>\n      <br>\n      <input type='text' formControlName=\"category\" placeholder='Category of the Expense/Income' />\n      <br>\n      <!-- <br>\n      <input type='date' formControlName=\"date\" id=\"date1\" value=\"\" />\n      <br> -->\n      <br>\n      <input type='number' formControlName=\"amount\" placeholder='&#8377;Enter Amount' />\n      <br>\n      <br>\n      <div [ngClass]=\"'flex'\">\n{{doAdd}}\n        <button *ngIf=\"doAdd\" button type=\"submit\" class=\"buttonFlat\">\n            ADD\n          </button>\n          <button *ngIf=\"!doAdd\" button type=\"submit\" class=\"buttonFlat\">\n            EDIT\n          </button>\n          <button type=\"button\" class=\"buttonFlat\" (click)=\"closeModal()\">\n            CANCEL\n          </button>\n      </div>\n      \n    </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}